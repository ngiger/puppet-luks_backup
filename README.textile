h1. luks_backup module for Puppet

Puppet module for running encrypted backup via ssh to a Rasperry PI

# https://github.com/bup/bup
# git-annex http://git-annex.branchable.com/
# /etc/ssh/sshd_config mit
# AllowUsers bob alic
# PasswordAuthentication no
# PermitRootLogin without_password

h2. Examples

* To install the luks_backup:

    @class { 'luks_backup': }@

* Preparing an USB hard-disk for encrypted backups

Plug-in any suitable USB-hard disk. Running @dmesg | tail@ should give you an idea about the hard disk partition to use. 
We assume /dev/sda1 here. Run @/usr/local/bin/backup_encrypted.sh --device /dev/sda1@. This may take a long time (several hours).
Many minutes will be needed to collect enough entropy to create the /etc/id.encryptd keyfile. $
Once this step is complete, you will be asked to confirm erasing the desired partition. Enter YES as prompted.
Formatting a the hard disk is also time consuming.

h2. Standalone use

As using Puppet to manage a rasperry PI might be an overkill there is helper script which installs the scripts into /usr/local/bin

h3. Prerequisites for standalone

bc. sudo aptitude install git cryptsetup ruby anacron
git clone https://github.com/ngiger/puppet-luks_backup luks_backup
cd luks_backup
sudo ./install_into_user_local_bin

h3. Prerequisites for standalone backup from remove server via ssh

We assume that we want to backup from a remote server using using the username backup_user via rsync and ssh.  backup_user@server.exampl.com.
We will use the root user to be able to run the backup in cron job.

bc. sudo ssh-keygen -f /etc/backup.ssh # Don't enter a passphrase
sudo ssh-copy-id backup_user@server.exampl.com # or copy the content of /etc/backup.ssh.pub to the ~/.ssh/authorized_keys file
# sudo ssh -i /etc/backup.ssh -p 3333 niklaus@praxis.schoenbucher.ch 

h3. Running the backup automatically

It might be a good idee to create a file @/etc/cron.daily/backup_from_remote_server@ with the following content

bc. sudo -i /usr/local/bin/backup_encrypted.rb --ssh backup_user@server.exampl.com /home > /dev/null 2>&1
sudo rsync --delete --exclude ungesichert -avzbe ssh -i /etc/backup.ssh -p 3333 niklaus@praxis.schoenbucher.ch:/home/niklaus /mnt/encrypted/backup/niklaus --backup-dir=/mnt/encrypted/backup/old


This will ensure that desired directories are backuped regularly.

install rsnapshot
/home/samba
/backup/postgresql/

sshd_config
PermitRootLogin no
AllowUsers backup niklaus sbu


h2. License

Copyright 2014, niklaus.giger@member.fsf.org

This program is free software; you can redistribute  it and/or modify it under the terms of the GNU General Public License version 3 as published by the Free Software Foundation.

