h1. luks_backup

Dieses Projekt hat zwei Ziele:

a) Auf einem Rasperry PI auf einfache Weise Backups von einem anderen PC (Linux mit Debian) zu ziehen und auf einer verschlüsselten Partition zu speichern.
b) Als Teil des Elexis-Admin Projektes Snapshots aller relevanten Verzeichnisse zu ziehen

Als Backup-Tool wird rsnapshot verwendet. Weshalb? Gemäss dem "Lennarts Blog":http://blog.karssen.org/2013/01/04/comparing-rsnapshot-and-obnam-for-scheduled-large-backups/ ist rsnapshot viel schneller als obnam (das andere Werkzeug, das ich untersucht habe). Und es ist gut zu wissen, dass unsere Lösung auch mit 6.5 TB noch laufen würde. Andere Tools, wie Amanda oder Bacula empfand ich als Overkill für mein Problem, die Daten einer Arztpraxis zu sichern.

AskUbuntu hat eine Übersicht über Vorzüge und Nachteile vieler Backup-Lösungen. Siehe "Comparision of backup tools":http://askubuntu.com/questions/2596/comparison-of-backup-tools.

Vorzüge:
# Rasperry-PI mit Gehäuse, 4G SD-Karte, Kabel (Ethernet, HDMI, USB) und USB-Ladegerät gibt es für < 100 Fr. (Z.B. http://klingler.net/index.html)
# Zusätzlicher USB-Stick/Festplatte kann je nach Backup-Grösse hinzugefügt werden
# Kleiner Stromverbrauch (ca 5 W)

Nachteile:
# Bei TB-Festplatten gehen viele Operationen extrem langsam!

h2. Graphische Oberfläche

  Nachdem Sie das Programm wie unten installiert haben, stehen Ihnen in der graphischen Oberfläche folgende Icons zur Verfügung:

!images/Overview.png!

* Einhängen Schlüssel-HD
* Aushängen Schlüssel-HD
* Backup-Starten

Nach dem Einhängen der Schlüssel-HD können Sie unter /mnt/encrypted/snapshot auf die gesicherten Dateien zugreifen. Daily.0 entspricht dem zuletzt erstellten Snapshot. Daily.1 ist ein Tag älter. Das gleiche Schema gilt für die wöchentlichen (weekly), monatlichen (monthly) und jährlichen (yearly) Sicherungen.

Es empfiehlt sich regelmässig zu prüfen, ob die gewünschten Dateien wirklich gesichert wurden!

h2. Voraussetzungen

Im folgende wird als Beispiel für einen Server, dessen Dateien gesichert werden müssen, der Name praxis.schoenbucher.ch verwendet.

Wir gehen davon aus,

# dass auf dem PC (praxis.schoenbucher.ch), der Benutzer backup Lese-Zugriffe auf alle Dateien hat.
## Dazu habe ich auf dem PC das Paket acl installiert. Eine gut Hilfeseite ist "http://wiki.ubuntuusers.de/ACL":http://wiki.ubuntuusers.de/ACL. Danach habe ich dort folgende Befehle ausgeführt.
### @sudo time setfacl -R -m u:backup:r /home /etc@ und (als Default)
### @sudo time setfacl -d -m u:backup:r /home /etc@
## Für gewisse Dateisystem, z.B. NFS muss in /etc/fstab acl als Option spezifiziert werden.
# dass, falls ssh nicht via Vorgabeport 22 erreichbar werden kann, der Benutzer im folgenden jeweils @ssh@ durch @ssh -p Portnummer@ ersetzt.
# der Benutzer backup via ssh auf den PC zugreifen kann. Dazu muss in /etc/ssh/sshd_config die Zeile @AllowUsers backup@ zu finden sein

h2. Aufsetzen des Rasperry-PI

# Raspbian muss auf dem Rasperry-PI installiert sein. Für andere Distributionen müssen die Anleitung entsprechend anpassen.
# Zuerst installieren wir noch einige benötigte Programme. Dazsu @sudo apt-get install git until-linux cryptsetup ruby anacron rsnapshot@ aufrufen.
# Danach kopieren wir eine Kopie dieses Projektes. Dazu @git clone https://github.com/ngiger/puppet-luks_backup /home/pi/luks_backup@.
# Einige Dateien (mount_encrypted.sh, umount_encrypted.sh) müssen /usr/local/bin kopiert werden, dazu @sudo /home/pi/luks_backup/install_into_user_local_bin@ aufrufen.
# Leeren USB-Stick oder leere USB-Festplatte einstecken. Feststellen, welche Festplatte-ID gebraucht @dmesg | tail@, wahrscheinlich /dev/sda oder /dev/sda1. Wir nehmen an, dass sie richtig partitioniert ist. Ansonsten mit Hilfe von @parted -align optimal /dev/sda@ Partition erzeugen.
# Mit dem Befehl @sudo /usr/local/bin/backup_encrypted.rb --init --device /dev/sda1@ wird die Datei /etc/backup.key zum Verschlüsseln der Festplatte erstellt, falls dies notwendig ist. Dies geht mehrere Minuten (bis zu einer Stunde) bis genügend zufällige Ereignisse aufgezeichnet wurden. Sie können diesen Prozess beschleunigen, indem Sie z.B. die Maus bewegen und Programme öffnen. Nachher wird die Partition neu formattiert, dazu müssen sie einmal "YES" angegeben, wenn Sie dazu aufgefordert werden. Das Formattieren kann bein einer TB-Festplatte locker länger als eine Stunde gehen.
# Die Schlüsseldateien /etc/backup.ssh und /etc/backup.ssh.pub für das Einloggen von root-Benutzer des PI als Benutze backup des PC werden wie folgt erstellt. @sudo ssh-keygen -f /etc/backup.ssh@. Zweimal Return drücken, um ein leeres Password zu erzeugen
# Jetzt muss der Inhalt Datei der Datei /etc/backup.ssh.pub nach praxis.schoenbucher.ch kopiert werden. Dazu wird ihr Inhalt mit @cat  /etc/backup.ssh.pub@ ausgelesen.
# Einloggen nach praxis.schoenbucher.ch und @sudo mkdir /var/backups/.ssh && sudo touch /var/backups/.ssh/authorized_keys@ eingeben, nachdem kontrolliert wurde, dass var/backups das Home-Verzeichnis des Benutzers backup ist.
# Die Datei /var/backups/.ssh/authorized_keys als Root-Benutzer öffnen und eine neue Zeile mit dem Inhalt der Datei /etc/backup.ssh.pub (des Rasperry) einfügen. Dieser Zeile "ssh-rsa " vorstellen.
# Benutzer und Zugriffsrechte richtigstellen mit folgenden Befehlen @sudo chown -R backup:backup /var/backups/.ssh && sudo chmod 0600 /var/backups/.ssh/authorized_keys@
# Anstelle der obigen 4 Befehle kann mit Hilfe von @sudo ssp-copy-id -i /etc/backup.ssh backup@praxis.schoenbucher.ch@ abgekürzt werden, falls
## man via Passwort als Benutzer einloggen kann (Dies ist auf einem Default-Debian-System NICHT der Fall) und
## ssh via Vorgabeport 22 erreichbar ist
# Zurückkehren auf den Rasperry PI und kontrollieren, dass man mit @sudo -u root ssh -i /etc/backup.ssh praxis.schoenbucher.ch@ auf den PC praxis.schoenbucher.ch einloggen kann.

h3. Testen des Backups

Die Datei /home/pi/luks_backup/files/rsnapshot.conf.example nach /etc kopieren und ggf. anpassen. Es empfiehlt sich zuerst nicht alle /home-Verzeichnisse, sondern nur z.B. diejenigen des Benutzers sbu zu sichern.

Zuerst ein @sudo mkdir /mnt/encrypted/snapshots@ ausführen.

Den Befehl @sudo rsnapshot -t -v -c /etc/rsnapshot.conf.example daily@ ausführen und Ausgabe auf Fehler kontrollieren. Ggf.  Probleme wegen Zugriffsrechten lösen.

h3. Automatisches Sichern

Es empfiehlt sich, das Sichern zu automatisieren, damit Sie die Sicherung nicht jeden Tag anstossen müssen.

Mittels des Befehls @sudo crontab -e@ folgende Zeilen anfügen. Achtung: Die zeitliche Reihenfolge ist wichtig!! (in absteigender Reihenfolge der Häufigkeit):

bc.50 23 * * * /usr/local/bin/run_encrypted_snapshot.rb /etc/rsnapshot.conf.prxserver daily --shutdown
40 23 * * 4 /usr/local/bin/run_encrypted_snapshot.rb /etc/rsnapshot.conf.prxserver weekly
30 23 1 * * /usr/local/bin/run_encrypted_snapshot.rb /etc/rsnapshot.conf.prxserver monthly
20 23 1 1 * /usr/local/bin/run_encrypted_snapshot.rb /etc/rsnapshot.conf.prxserver yearly

um folgendes Backup-Schema zu realiseren
# 1 täglichen Backup  um 23 Uhr 50, danach ausschalten
# 1 wöchentlichen Backup, am 6 Tag der Woche (Samstag) um 23 Uhr 40
# 1 monatlichen Backup, jeweils am 1 Tag des Monats um 23 Uhr 30
# 1 jährlichen Backup, jeweils am 1.1 um 23 Uhr 20

In rsnapshot.conf.example können beliebig viele rsync-Befehle (auch zum Holen von verschiedenen Servern) definiert werden.

Am nächsten Tag und in regelmässigen Abständen die Datei /var/log/rsnapshot.log überprüfen, ob der Backup wirklich durchlief. Regelmässig testen, ob eine Datei, mit welcher man gestern gearbeitet hat, auch richtig in der Sicherheitskopie vorhanden ist.

h2. Sicherheit

* Password des Vorgab-Benutzer von Rasbian pi ändern (@sudo passwd pi@) oder löschen (@sudo deluser pi@)
* Neuen Benutzer (@adduser myUserName@) erstellen und ihm sudo-Rechte geben, z.B. durch Anhänge der Zeile  @myUserName    ALL=(ALL:ALL) ALL@ an die Datei @/etc/sudoers@

* Ich empfehle folgende Einstellungen unter /etc/sshd_config zu setzen
# AllowUsers backup myUserName anotherUserName
# PermitRootLogin no

h2. Gebrauch als Puppet-Modul für https://github.com/ngiger/elexis-vagrant

* To install the luks_backup:

    @class { 'luks_backup': }@

Als Backup-Zielordner wird die Hiera-Variable luks_backup::backup_dir mit dem Vorgabewert /backup genommen.


h2. License

Copyright 2014, niklaus.giger@member.fsf.org

This program is free software; you can redistribute  it and/or modify it under the terms of the GNU General Public License version 3 as published by the Free Software Foundation.

